<?xml version="1.0"?>

<!DOCTYPE document SYSTEM "dtd/document-v10.dtd">

<document>
  <header>
    <title>Avalon Framework - Overview</title>
    <authors>
      <person name="Berin Loritsch" email="bloritsch@apache.org"/>
      <person name="Peter Donald" email="peter at apache.org"/>
      <person name="Leo Simons" email="leosimons@apache.org"/>
    </authors>
  </header>
  <body>
    <s1 title="Introduction">
      <p>
        The Avalon framework consists of interfaces
        that define relationships between commonly used application components,
        best-of-practice pattern enforcements, and several
        lightweight convenience implementations of the generic components.
      </p>
      <p>
        If that sounds a bit abstract to you, we suggest you start by reading
        the guide (see below). If you want to see the code first, either
        <link href="http://jakarta.apache.org/builds/jakarta-avalon/release/framework">Download</link>
        it or
        <link href="http://jakarta.apache.org/site/cvsindex.html">get it from CVS</link>.
        The <link href="getting-started.html">Getting started</link> document
        provides more pointers.         
      </p>
    </s1>
      <s1 title="Guide to Avalon Framework">
        <p>
          The Avalon Framework is based on several important programming
          concepts (design patterns and COP) which are applied throughout
          Avalon. This documentation first introduces each of these, providing
          links to external sources for more elaborate documentation. Then,
          we look at how these concepts are used within Avalon.
        </p>
        <p>
          This is more a theoretical introduction than a hands-on guide. If you
          prefer looking at code while learning, try our
          <link href="@AVALON_BASE@/developing">Developing with Avalon</link> paper.
        </p>
        <s2 title="Target Audience">
          <p>
            This documentation is aimed towards developers who:
            <ul>
              <li>are interested in the design principles of Avalon</li>
              <li>wish to develop code that will be incorporated into Avalon</li>
              <li>wish to reuse Avalon concepts in their own application</li>
            </ul>
          </p>
        </s2>
        <s2 title="Contents">
          <ol>
            <li><link href="guide-oop-best-practices.html">OOP best practices</link></li>
            <li><link href="guide-patterns-what-are.html">What are design patterns?</link></li>
            <li><link href="guide-patterns-in-avalon.html">Design patterns in Avalon</link></li>
            <li><link href="guide-cop-what-is.html">What is Component-Oriented Programming?</link></li>
            <li><link href="guide-cop-in-avalon.html">COP in Avalon</link></li>
            <li><link href="guide-where-to-go-from-here.html">Where to go next</link></li>
          </ol>
        </s2>
      </s1>
      <s1 title="Avalon Framework Reference Documentation">
        <p>
           Besides the
           <link href="@AVALON_BASE@/api/index.html">Javadocs</link>, we have
           <link href="diagrams/">Class diagrams</link>, the
           <link href="reference-the-lifecycle.html">Lifecycle specification</link> and the
           <link href="reference-containers.html">List of containers</link>.
        </p>
      </s1>
  </body>
  <footer>
    <legal>
      Copyright (c) @year@ The Jakarta Apache Project All rights reserved.
      $Revision: 1.1 $ $Date: 2006-08-08 23:17:20 $
    </legal>
  </footer>
</document>
