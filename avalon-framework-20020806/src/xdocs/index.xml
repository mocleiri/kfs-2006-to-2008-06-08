<?xml version="1.0"?>

<!DOCTYPE document SYSTEM "dtd/document-v10.dtd">

<document>
  <header>
    <title>Avalon Project - Overview</title>
    <authors>
      <person id="FB" name="Federico Barbieri" email="fede@apache.org"/>
      <person id="BL" name="Berin Loritsch" email="bloritsch@apache.org"/>
      <person id="LS" name="Leo Simons" email="mail@leosimons.com"/>
      <person id="PD" name="Peter Donald" email="peter at apache.org"/>
      <person id="PH" name="Paul Hammant" email="Paul_Hammant@yahoo.com"/>
      <person id="NKB" name="Nicola Ken Barozzi" email="nicolaken@apache.org"/>      
    </authors>
  </header>
  <body>
    <s1 title="What is it?">
      <p>
       The Avalon project is an effort to create, design, develop and maintain
       a common framework and set of components for applications written 
       using the Java language.
      </p>
      <p>
      Having said that, what Avalon 'is', is a framework that allows components of varying 
      scale to be created, managed via a specific set of 
      <link href="framework/reference-the-lifecycle.html">lifecycle</link> methods, 
      and used in an application. While Avalon is geared towards server-side applications, 
      it is not limited to such, and is quite flexible.
      </p>
      <p>
      The scope of usage for Avalon is quite broad. You may only want to create custom, application
      specific components that can be managed in a well defined manner, or you may want to use the many
      components and services available with the 
      <link href="http://jakarta.apache.org/avalon/excalibur/index.html">Excalibur</link>
      sub-project, or use complete applications, such as FTP or a web server, in a server oriented 
      container such as Phoenix. What this means to you is that you can use only what you need to use, 
      and you can scale your usage of Avalon as your application needs grow.
      </p>
    </s1>
    <s1 title="Project Goals">
      <p>
        As many people point out, software engineering is a very uncommon procedure
        in software development and even more uncommon in auto-organized open
        source projects. The main goal of this project is to design a way for
        different projects to share resources avoiding as much as possible efforts
        duplication.
      </p>
      <p>
        The Avalon Team are proud to announce a new whitepaper that covers how
        to develop with Avalon. It covers the Framework, and touches on the
        LogKit and Excalibur. You can find
        <link href="./developing/index.html">Developing with Apache Avalon</link>
        on this site.
      </p>
    </s1>
    <s1 title="Sub-Projects">
      <p>
        There are several distinct sub-projects that together form the Avalon project:
      </p>

      <s2 title="Framework">
        <p>
          <link href="framework/index.html">Framework</link> provides a specification of
          design patterns and rules in the form of interfaces. Also provided are default
          implementations of those interfaces.
        </p>
        <p>
          The framework is not a product or an API set or a set of interfaces: it is
          a collection of code design patterns, rules, guidelines and suggestions on how to
          write software that "plugs" into the framework. The framework does not
          impose restrictions on the application that uses it, but rather precious guidelines to
          help the developers reuse as much work they can from other solutions.
        </p>
      </s2>

      <s2 title="Excalibur">
        <p>
          <link href="@EXCALIBUR_BASE@/index.html">Excalibur</link> is a collection of
          implementations and common code based on and implementing the
          <link href="framework/index.html">Avalon Framework</link>.
        </p>
      </s2>

      <s2 title="Phoenix">
        <p>
          <link href="@PHOENIX_BASE@/index.html">Phoenix</link> is a server oriented
          Application Server. Applications and Services that conform to the framework
          rules can be hosted in Phoenix. The Application server manages the applications
          classloader, security and logging needs. It also provides a JMX-based management
          facility.
        </p>
      </s2>

      <s2 title="Cornerstone">
        <p>
          <link href="@CORNERSTONE_BASE@/index.html">Cornerstone</link> is a repository.
          for what we call <link href="@PHOENIX_BASE@/what-is-a-block.html">blocks</link>,
          which provide services vital to server applications. The blocks include blocks for
          services such as scheduling and socket management.
        </p>
      </s2>

      <s2 title="Applications">
        <p>
          <link href="@APPS_BASE@/index.html">Applications</link> is a repository of
          Phoenix blocks.  Some are simple self-contained demos of Phoenix applications,
          others are complete standalone products, and a few are ambitious works in progress.
          If you are looking for a starting point for a Phoenix block or a complete server,
          then these applications could be good inspiration.
        </p>
      </s2>

      <s2 title="LogKit">
        <p>
          <link href="@LOGKIT_BASE@/index.html">LogKit</link> is the preferred logging toolkit
          used by the Avalon subprojects.

	  <note>
	  It is quite possible to use the other avalon subprojects without committing to logkit.
	  We support log4j and JDK 1.4 logging as well.
	  </note>
        </p>
      </s2>

    </s1>

    <s1 title="Supporting Technologies">
        <p>
           <link href="http://krysalis.org/"><img src="skin/images/centipede-logo-small.gif" alt="Krysalis Logo" border="0"/></link>
           <link href="http://xml.apache.org/cocoon/"><img src="skin/images/built-with-cocoon.gif" alt="Cocoon Logo" border="0"/></link>
           <link href="http://jakarta.apache.org/ant/"><img src="skin/images/ant_logo_small.gif" alt="Ant Logo" border="0"/></link>
        </p>

    </s1>
    
  </body>
  <footer>
    <legal>
      Copyright (c) @year@ The Jakarta Apache Project All rights reserved.
      $Revision: 1.1 $ $Date: 2006-08-08 23:17:21 $
    </legal>
  </footer>
</document>
